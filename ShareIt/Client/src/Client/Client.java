/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Client;

/**
 *
 * @author Soniya
 */
import java.io.BufferedInputStream;
import java.io.BufferedOutputStream;
import java.io.DataInputStream;
import java.io.DataOutputStream;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileOutputStream;
import java.io.InputStream;
import java.io.OutputStream;
import java.net.Socket;
import javax.swing.DefaultListModel;
import javax.swing.JFileChooser;

public class Client extends javax.swing.JFrame {

    /**
     * Creates new form Client
     */
    static Socket s;
    static File transferFile;
    static FileInputStream fin;
    static OutputStream os;
    static BufferedInputStream bin;
    static String file_path;
    static DataInputStream in;
    static DataOutputStream out;
    static InputStream is;
    static FileOutputStream fos;
    static BufferedOutputStream bos;
    static String status;
    static newModel NwModl;
    
    public Client() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        show = new javax.swing.JTextArea();
        jScrollPane2 = new javax.swing.JScrollPane();
        files = new javax.swing.JList();
        send = new javax.swing.JButton();
        browse2 = new javax.swing.JButton();
        writee = new javax.swing.JTextField();
        check = new javax.swing.JComboBox<String>();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 20)); // NOI18N
        jLabel1.setText("Client");

        show.setEditable(false);
        show.setColumns(20);
        show.setRows(5);
        jScrollPane1.setViewportView(show);

        jScrollPane2.setViewportView(files);

        send.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        send.setText("send");
        send.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sendActionPerformed(evt);
            }
        });

        browse2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        browse2.setText("Browse");
        browse2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                browse2ActionPerformed(evt);
            }
        });

        writee.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                writeeActionPerformed(evt);
            }
        });

        check.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        check.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Text doc", "Image", "Java", "Html", "C", "Cpp", "Docx", "class" }));
        check.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                checkActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(259, 259, 259)
                .addComponent(jLabel1)
                .addGap(0, 0, Short.MAX_VALUE))
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 276, Short.MAX_VALUE)
                        .addGap(18, 18, 18)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 207, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addComponent(writee)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addGap(0, 0, Short.MAX_VALUE)
                                .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 118, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(76, 76, 76)))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(check, 0, 140, Short.MAX_VALUE)
                            .addComponent(browse2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))))
                .addGap(23, 23, 23))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addComponent(jLabel1)
                .addGap(30, 30, 30)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 237, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(writee, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(browse2, javax.swing.GroupLayout.DEFAULT_SIZE, 43, Short.MAX_VALUE))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(11, 11, 11)
                        .addComponent(check, javax.swing.GroupLayout.PREFERRED_SIZE, 42, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(35, 35, 35)
                        .addComponent(send, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(37, 37, 37))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void sendActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sendActionPerformed
        try {
            if(check.getSelectedIndex()==0)
            {
                status="Text Docu";
            }
            if(check.getSelectedIndex()==1)
            {
                status="Image";
            }
            if(check.getSelectedIndex()==2)
            {
                status="Java";
            }
            if(check.getSelectedIndex()==3)
            {
                status="Html";
            }
            if(check.getSelectedIndex()==4)
            {
                status="C";
            }
            if(check.getSelectedIndex()==5)
            {
                status="Cpp";
            }
            if(check.getSelectedIndex()==6)
            {
                status="Docx";
            }
            if(check.getSelectedIndex()==7)
            {
                status="class";
            }
            transferFile = new File(file_path);
            out = new DataOutputStream(s.getOutputStream());
            byte[] byteArray = new byte[(int) transferFile.length()];
            fin = new FileInputStream(transferFile);
            bin = new BufferedInputStream(fin);
            bin.read(byteArray, 0, byteArray.length);
            os = s.getOutputStream();

            out.writeUTF(status+"--!--"+writee.getText());
            os.write(byteArray, 0, byteArray.length);
            show.setText(show.getText()+"\nSending file :"+writee.getText());
            writee.setText("");
        } catch (Exception e) {
        }

        // TODO add your handling code here:
    }//GEN-LAST:event_sendActionPerformed

    private void browse2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_browse2ActionPerformed
        JFileChooser ch = new JFileChooser("G:\\AJP_shared data");
        int c = ch.showOpenDialog(this);
        if (c == JFileChooser.APPROVE_OPTION) {
            File file = ch.getSelectedFile();
            file_path = "" + ch.getSelectedFile();
            writee.setText(file.getName());
        }

        //TODO add your handling code here:
    }//GEN-LAST:event_browse2ActionPerformed

    private void writeeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_writeeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_writeeActionPerformed

    private void checkActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_checkActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_checkActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Client.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Client().setVisible(true);
                NwModl = new newModel();
            
        newRenderer NwRndrer = new newRenderer();
        
        files.setModel(NwModl);
          files.setCellRenderer(NwRndrer);
                show.setText("Connection established");
            }
        });
        try {
            //192.168.43.210
            s = new Socket("LocalHost", 9999);
            is = s.getInputStream();
            in=new DataInputStream(s.getInputStream());
            
            while (true) {
                int filesize = 82722386;
            int bytesRead;
            int currentTot = 0;
            
            String s=in.readUTF();
            String[] arr=s.split("--!--");
           
            byte[] bytearray = new byte[filesize];
            fos = new FileOutputStream("G:\\AJP_shared data\\"+arr[1]);
            
           
            bos = new BufferedOutputStream(fos);
            bytesRead = is.read(bytearray, 0, bytearray.length);
            currentTot = bytesRead;
            bos.write(bytearray, 0, bytearray.length);
            show.setText(show.getText() + "\nreceived file: "+arr[1]);
             NwModl.display(arr[0],arr[1]);
            }
        } catch (Exception e) {
        }

    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton browse2;
    private javax.swing.JComboBox<String> check;
    private static javax.swing.JList files;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton send;
    private static javax.swing.JTextArea show;
    private javax.swing.JTextField writee;
    // End of variables declaration//GEN-END:variables
}
